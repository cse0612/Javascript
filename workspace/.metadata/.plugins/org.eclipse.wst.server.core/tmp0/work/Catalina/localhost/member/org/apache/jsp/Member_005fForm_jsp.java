/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2021-05-04 06:09:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Member_005fForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<style>\r\n");
      out.write(".title {\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#right {\r\n");
      out.write("\tfont-size: 16px;\r\n");
      out.write("\ttext-align: right;\r\n");
      out.write("\twidth: 1250px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#button {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\theight: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#subject {\r\n");
      out.write("\theight: 50px;\r\n");
      out.write("\tfont-size: 20px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tbackground: #DB7093;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".require {\r\n");
      out.write("\tcolor: red;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\ttext-align: right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table {\r\n");
      out.write("\tmargin-left: auto;\r\n");
      out.write("\tmargin-right: auto;\r\n");
      out.write("\tborder-spacing: 0;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tline-height: 1.5;\r\n");
      out.write("\tborder-top: 1px solid #ccc;\r\n");
      out.write("\tborder-left: 1px solid #ccc;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("\tpadding: 10px;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tvertical-align: top;\r\n");
      out.write("\ttext-align: right;\r\n");
      out.write("\tborder-right: 1px solid #ccc;\r\n");
      out.write("\tborder-bottom: 1px solid #ccc;\r\n");
      out.write("\tborder-top: 1px solid #fff;\r\n");
      out.write("\tborder-left: 1px solid #fff;\r\n");
      out.write("\tbackground: #F5FFFA;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td {\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("\ttext-align: left;\r\n");
      out.write("\tborder-right: 1px solid #ccc;\r\n");
      out.write("\tborder-bottom: 1px solid #ccc;\r\n");
      out.write("\tborder-top: 1px solid #fff;\r\n");
      out.write("\tborder-left: 1px solid #fff;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<!-- script src=\"jumin_check.js\"></script -->\r\n");
      out.write("<script src=\"script.js\" charset=\"UTF-8\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<form name=\"memberForm\" method=\"post\" action=\"Member_control.jsp\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"action\" value=\"insert\">\r\n");
      out.write("\t\t<div align=\"center\">\r\n");
      out.write("\t\t\t<h1 class=\"title\">회원가입</h1>\r\n");
      out.write("\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t\t<div class=\"right\">\r\n");
      out.write("\t\t\t\t\t<span class=\"require\">*</span>필수입력사항\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<table class=\"table\">\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th id=\"subject\" colspan=\"2\">회원 기본 정보</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tbody class=\"tbody\">\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>아이디<span class=\"require\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"text\" name=\"mem_id\" placeholder=\"6자 이상의 영문과 숫자\" required autofocus> \r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"button\" value=\"ID중복확인\" onclick=\"idCheck(mem_id.value)\"></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>비밀번호<span class=\"require\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"text\" name=\"mem_passwd\" maxlength=\"12\" minlength=\"8\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t8~12자리의 영문 대소문자와 숫자, 특수문자로만 입력</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>비밀번호확인<span class=\"require\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"text\" name=\"mem_passwd2\" maxlength=\"12\" minlength=\"8\" required></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>이 름<span class=\"require\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"text\" name=\"mem_name\" required></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>닉네임</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"text\" name=\"mem_nickname\">2~10자리의\r\n");
      out.write("\t\t\t\t\t\t\t\t한글로만 입력</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>이메일<span class=\"require\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"email\" name=\"mem_email\" maxlength=\"50\"\r\n");
      out.write("\t\t\t\t\t\t\t\tplaceholder=\"id@domain.com\" required>예)id@domain.com</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>주민등록번호<span class=\"require\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"text\" id=\"jumin1\" name=\"mem_num1\"\r\n");
      out.write("\t\t\t\t\t\t\t\tdata-name=\"주민번호1\" size=6 maxlength=\"6\" required> - <input\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"text\" id=\"jumin2\" name=\"mem_num2\" data-name=\"주민번호2\" size=7\r\n");
      out.write("\t\t\t\t\t\t\t\tmaxlength=\"7\" required> <input type=\"button\" name=\"btn\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue=\"주민번호 정상 유무 체크\" onclick=\"juminCheck(mem_num1.value, mem_num2.value);\"></td>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>휴대폰번호<span class=\"require\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"tel\" name=\"mem_phone\"\r\n");
      out.write("\t\t\t\t\t\t\t\tplaceholder=\"010-1234-1234\" pattern=\"(010)-[0-9]{4}-[0-9]{4}\"></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>성 별</th>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"radio\" name=\"mem_gender\" value=\"male\"\r\n");
      out.write("\t\t\t\t\t\t\t\tchecked>남성 <input type=\"radio\" name=\"mem_gender\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue=\"female\">여성</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>생년월일<span class=\"require\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t<td><select name=\"mem_Birthday1\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- option value=\"\">년</option -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar today = new Date();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar toyear = parseInt(today.getFullYear());\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar start = toyear;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar end = toyear - 100;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdocument.write(\"<option value='\"+ toyear +\"'selected>\"+ toyear + \"</option>\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor (i = start; i >= end; i--) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdocument.write(\"<option value='\"+ (i-1) +\"'>\"+ (i-1) + \"</option>\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t\t\t\t</select> <select name=\"mem_Birthday2\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"\">월</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfor (i = 1; i < 13; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdocument.write(\"<option value='\"+ i +\"'>\"+ i + \"</option>\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t\t\t\t</select> <select name=\"mem_Birthday3\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"\">일</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfor (i = 1; i < 32; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdocument.write(\"<option value='\"+ i +\"'>\"+ i + \"</option>\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>직업<span class=\"require\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t<td><select name=\"mem_job\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"\" selected>직업선택</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"1\">회사원</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"2\">공무원</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"3\">학생</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"4\">무직</option>\r\n");
      out.write("\t\t\t\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th>주소<span class=\"require\">*</span></th>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"text\" name=\"zipCode\" placeholder=\"우편번호\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"button\" value=\"우편번호 찾기\" onclick=\"execDaumPostcode()\"></br>\r\n");
      out.write("\t\t\t\t\t\t\t</br> <input type=\"text\" name=\"userAddr1\" size=\"100\" placeholder=\"주소\"\r\n");
      out.write("\t\t\t\t\t\t\t\trequired></br> <input type=\"text\" name=\"userAddr2\"\r\n");
      out.write("\t\t\t\t\t\t\t\tplaceholder=\"상세주소(동호수 입력)\" required> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\t\tname=\"userAddr3\" placeholder=\"참고항목(도로명인 경우: 지역 동이름과 아파트 이름)\"\r\n");
      out.write("\t\t\t\t\t\t\t\tsize=\"50\"></br><p>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div id=\"wrap\" style=\"display:none;border:1px solid;width:500px;height:300px;margin:5px 0;position:relative\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<img src=\"//t1.daumcdn.net/postcode/resource/images/close.png\" id=\"btnFoldWrap\" style=\"cursor:pointer;position:absolute;right:0px;top:-1px;z-index:1\" onclick=\"foldDaumPostcode()\" alt=\"접기 버튼\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td id=\"button\" colspan=\"2\"><input type=\"submit\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue=\"회원가입 등록\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <input\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"reset\" value=\"다시쓰기\"></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t    // 우편번호 찾기 찾기 화면을 넣을 element\r\n");
      out.write("\t    var element_wrap = document.getElementById('wrap');\r\n");
      out.write("\t\r\n");
      out.write("\t    function foldDaumPostcode() {\r\n");
      out.write("\t        // iframe을 넣은 element를 안보이게 한다.\r\n");
      out.write("\t        element_wrap.style.display = 'none';\r\n");
      out.write("\t    }\r\n");
      out.write("\t\r\n");
      out.write("\t    function execDaumPostcode() {\r\n");
      out.write("\t        // 현재 scroll 위치를 저장해놓는다.\r\n");
      out.write("\t        var currentScroll = Math.max(document.body.scrollTop, document.documentElement.scrollTop);\r\n");
      out.write("\t        new daum.Postcode({\r\n");
      out.write("\t            oncomplete: function(data) {\r\n");
      out.write("\t                // 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\t\r\n");
      out.write("\t                // 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("\t                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("\t                var addr = ''; // 주소 변수\r\n");
      out.write("\t                var extraAddr = ''; // 참고항목 변수\r\n");
      out.write("\t\r\n");
      out.write("\t                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n");
      out.write("\t                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n");
      out.write("\t                    addr = data.roadAddress;\r\n");
      out.write("\t                } else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n");
      out.write("\t                    addr = data.jibunAddress;\r\n");
      out.write("\t                }\r\n");
      out.write("\t\r\n");
      out.write("\t                // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n");
      out.write("\t                if(data.userSelectedType === 'R'){\r\n");
      out.write("\t                    // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("\t                    // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("\t                    if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("\t                        extraAddr += data.bname;\r\n");
      out.write("\t                    }\r\n");
      out.write("\t                    // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("\t                    if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("\t                        extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("\t                    }\r\n");
      out.write("\t                    // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("\t                    if(extraAddr !== ''){\r\n");
      out.write("\t                        extraAddr = ' (' + extraAddr + ')';\r\n");
      out.write("\t                    }\r\n");
      out.write("\t                    // 조합된 참고항목을 해당 필드에 넣는다.\r\n");
      out.write("\t                    document.memberForm.userAddr3.value = extraAddr;\r\n");
      out.write("\t                \r\n");
      out.write("\t                } else {\r\n");
      out.write("\t                    document.memberForm.userAddr3.value = '';\r\n");
      out.write("\t                }\r\n");
      out.write("\t\r\n");
      out.write("\t                // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("\t                document.memberForm.zipCode.value = data.zonecode;\r\n");
      out.write("\t                document.memberForm.userAddr1.value = addr;\r\n");
      out.write("\t                // 커서를 상세주소 필드로 이동한다.\r\n");
      out.write("\t                document.memberForm.userAddr2.focus();\r\n");
      out.write("\t\r\n");
      out.write("\t                // iframe을 넣은 element를 안보이게 한다.\r\n");
      out.write("\t                // (autoClose:false 기능을 이용한다면, 아래 코드를 제거해야 화면에서 사라지지 않는다.)\r\n");
      out.write("\t                element_wrap.style.display = 'none';\r\n");
      out.write("\t\r\n");
      out.write("\t                // 우편번호 찾기 화면이 보이기 이전으로 scroll 위치를 되돌린다.\r\n");
      out.write("\t                document.body.scrollTop = currentScroll;\r\n");
      out.write("\t            },\r\n");
      out.write("\t            // 우편번호 찾기 화면 크기가 조정되었을때 실행할 코드를 작성하는 부분. iframe을 넣은 element의 높이값을 조정한다.\r\n");
      out.write("\t            onresize : function(size) {\r\n");
      out.write("\t                element_wrap.style.height = size.height+'px';\r\n");
      out.write("\t            },\r\n");
      out.write("\t            width : '100%',\r\n");
      out.write("\t            height : '100%'\r\n");
      out.write("\t        }).embed(element_wrap);\r\n");
      out.write("\t\r\n");
      out.write("\t        // iframe을 넣은 element를 보이게 한다.\r\n");
      out.write("\t        element_wrap.style.display = 'block';\r\n");
      out.write("\t    }\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
