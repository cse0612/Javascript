<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>이미지 마커와 커스텀 오버레이</title>
<style>
.overlaybox {position:relative;width:360px;height:350px;background:url('https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/box_movie.png') no-repeat;padding:15px 10px;}
.overlaybox div, ul {overflow:hidden;margin:0;padding:0;}
.overlaybox li {list-style: none;}
.overlaybox .boxtitle {color:#fff;font-size:16px;font-weight:bold;background: url('https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/arrow_white.png') no-repeat right 120px center;margin-bottom:8px;}
.overlaybox .first {position:relative;width:247px;height:136px;background: url('img/estate.png') no-repeat;margin-bottom:8px;}
.first .text {color:#fff;font-weight:bold;}
.first .triangle {position:absolute;width:48px;height:48px;top:0;left:0;background: url('https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/triangle.png') no-repeat; padding:6px;font-size:18px;}
.first .movietitle {position:absolute;width:100%;bottom:0;background:rgba(0,0,0,0.4);padding:7px 15px;font-size:14px;}
.overlaybox ul {width:247px;}
.overlaybox li {position:relative;margin-bottom:2px;background:#2b2d36;padding:5px 10px;color:#aaabaf;line-height: 1;}
.overlaybox li span {display:inline-block;}
.overlaybox li .number {font-size:16px;font-weight:bold;}
.overlaybox li .title {font-size:13px;}
.overlaybox ul .arrow {position:absolute;margin-top:8px;right:25px;width:5px;height:3px;background:url('https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/updown.png') no-repeat;} 
.overlaybox li .up {background-position:0 -40px;}
.overlaybox li .down {background-position:0 -60px;}
.overlaybox li .count {position:absolute;margin-top:5px;right:15px;font-size:10px;}
.overlaybox li:hover {color:#fff;background:#d24545;}
.overlaybox li:hover .up {background-position:0 0px;}
.overlaybox li:hover .down {background-position:0 -20px;}   
</style>
</head>
<body>
	<!-- 맵 출력 DIV -->
	<div id="map" style="width: 100%; height: 350px;"></div>
	
	<script	src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<!-- 카카오 API 삽입 -->
	<script type="text/javascript"	src="//dapi.kakao.com/v2/maps/sdk.js?appkey=269f3bdfee8403c85dd95f5cc96189e1&libraries=services"></script>
	
	<script>
	/* ==========  데이타  ============== */ 
	//[2차원 배열 생성 함수이용]
	var rows=1;
	var columns=2;
	var data = [];
	function create2DArray(rows, columns) {
	    var arrData = new Array(rows);
	    for(var i = 0; i < rows; i++) {
	    	data = ["경기도 시흥시 은행로 93-"+i,  "전세"];
	        arrData[i] = data;
	    }
	    return arrData;
	}
	var arrData = create2DArray(rows, columns);

//	console.log(arrData);
	
	/* ==========  맵  생성  ============== */ 
 	var mapContainer = document.getElementById('map');		// 맵을 넣을 div 
 	var mapOption = { 
 			center : new kakao.maps.LatLng(37.502, 127.026581),	// 지도의 중심좌표 설정 
 			level: 7 										// 지도의 확대 레벨
 	};

 	var map = new kakao.maps.Map(mapContainer, mapOption);	// 맵 표시 

	/* ==========  마커이미지(MarkerImage) 객체  ============== */
 	var imageSrc = 'https://i1.daumcdn.net/dmaps/apis/n_local_blit_04.png',		// 마커이미지 경로
 		imageSize = new kakao.maps.Size(31, 35), 								// 마커이미지 사이즈
    	imageOption = {offset: new kakao.maps.Point(27, 69)}; 					// 마커이미지 옵션. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정
    
    var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);		// 마커의 이미지정보를 가지고 있는 마커이미지 생성
     
    /* ==========  주소-좌표 변환 (Geocoder) 객체  ============== 
     Methods:
    	 addressSearch(addr, callback, options)	-> 주소 정보에 해당하는 좌표값을 요청한다.
     Parameters:
    	 addr (String) : 변환할 주소명
    	 callback (Function) : 검색 결과를 받을 콜백함수
    	 options (Object) > analyze_type : 검색어 매칭 방식 선택 옵션. SIMILAR 일 경우 입력한 것과 유사한 검색어도 검색결과에 포함시킨다. EXACT 일 경우 입력한 주소 문자열과 정확하게 매칭되는 주소만을 찾아준다. 기본값은 SIMILAR
     Callback Arguments :
    	 result (Array) : 결과 목록   결과 상세는 로컬 REST API 주소 검색 의 응답결과 참고  https://developers.kakao.com/docs/latest/ko/local/dev-guide#address-coord
    					-  address_name	(String) :	전체 지번 주소 또는 전체 도로명 주소, 입력에 따라 결정됨
    					-  x (String)	X 좌표값, 경위도인 경우 longitude(경도)
    	 				-  y (String)	Y 좌표값, 경위도인 경우 latitude(위도)
    	 				-  road_address	도로명 주소 상세 정보, 아래 RoadAaddress 항목 구성 요소 참고
    	 status (Status) : 응답 코드 값 -> OK : 검색 결과 있음     	 ZERO_RESULT : 정상적으로 응답 받았으나 검색 결과는 없음     	 ERROR : 서버 응답에 문제가 있는 경우
    */

    var geocoder = new kakao.maps.services.Geocoder();	//	API주소에 libraries=services 추가!
    //arr.forEach(callback(currentvalue, index){});
 	arrData.forEach(function(addr, index) {	// 데이타 반복 실행
 	    geocoder.addressSearch(addr[0], function(result, status) {
 			console.log("addr[0]:" + addr[0] + "status:" + status);
	         if(status === kakao.maps.services.Status.OK) {	// status결과값 OK(상수)일 경우
	          	 var coords = new kakao.maps.LatLng(result[0].y, result[0].x);
	             var marker = new kakao.maps.Marker({		 // 결과값으로 받은 위치를 마커로 표시합니다
	     	         map: map,
	                 position: coords,
	                 clickable: true,	// 마커를 클릭했을 때 지도의 클릭 이벤트가 발생하지 않도록 설정
	                 image: markerImage // 마커이미지 설정 
	             });
	             
                /* ==========  커스텀오버레이(CustomOvelay) 객체  ============== */
	            // 커스텀 오버레이에 표시할 내용입니다     
				// HTML 문자열 또는 Dom Element 입니다 
				var content = '<div class="overlaybox">'
				+ '    <div class="boxtitle">금주 영화순위</div>'
				+ '    <div class="first">'
				+ '        <div class="triangle text">1</div>'
				+ '        <div class="movietitle text">드래곤 길들이기2</div>'
				+ '    </div>' + '    <ul>' + '        <li class="up">'
				+ '            <span class="number">2</span>'
				+ '            <span class="title">명량</span>'
				+ '            <span class="arrow up"></span>'
				+ '            <span class="count">2</span>' + '        </li>'
				+ '        <li>' + '            <span class="number">3</span>'
				+ '            <span class="title">해적(바다로 간 산적)</span>'
				+ '            <span class="arrow up"></span>'
				+ '            <span class="count">6</span>' + '        </li>'
				+ '        <li>' + '            <span class="number">4</span>'
				+ '            <span class="title">해무</span>'
				+ '            <span class="arrow up"></span>'
				+ '            <span class="count">3</span>' + '        </li>'
				+ '        <li>' + '            <span class="number">5</span>'
				+ '            <span class="title">안녕, 헤이즐</span>'
				+ '            <span class="arrow down"></span>'
				+ '            <span class="count">1</span>' + '        </li>'
				+ '    </ul>' + '</div>';
				
				/*
				var content = '<div class="overlaybox">' +
							    '    <div class="boxtitle">부동산 매물정보</div>' +
							    '    <div class="first">' +
							    '        <div class="triangle text">1</div>' +
							    '        <div class="movietitle text">제목</div>' +
							    '    </div>' +
							    '    <ul>' +
							    '        <li class="up">' +
							    '            <span class="number">2</span>' +
							    '            <span class="title">'+ result[0].road_address.address_name + '</span>' +
							    '            <span class="arrow up"></span>' +
							    '            <span class="count">2</span>' +
							    '        </li>' +
							    '    </ul>' +
							    '</div>';
	             */
	           //  console.log(content);
	             // 커스텀 오버레이를 생성합니다
				var customOverlay = new kakao.maps.CustomOverlay({
				    position: coords,
				    content: content,
				    xAnchor: 0.3,
				    yAnchor: 0.91
				});    
				
				customOverlay.setMap(map);    // 커스텀 오버레이를 지도에 표시합니다
				/*
	             kakao.maps.event.addListener(marker, 'click', function() {
	 				customOverlay.setMap(map);    // 커스텀 오버레이를 지도에 표시합니다
	             });    
				*/
	           // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다
	           //  map.setCenter(coords);
	        	 
	         }  // end if  ===============================================================
	        
	    }); // end geododer() 
 	}); // end forEach()

 	
 	
 	 /* ==========  마커클러스터러(MarkerClustere) 객체  ============== 
	마커 클러스터링을 담당하는 객체.
	clusterer 라이브러리를 별도 로드 해야 사용 가능하다.
	
	Parameters:
		options (Object)
		map (Map) : 클러스터링 마커를 표시할 지도 객체
		markers (Array.< Marker >) : 클러스터링 할 마커 배열
		gridSize (Number) : 클러스터의 격자 크기. 화면 픽셀 단위이며 해당 격자 영역 안에 마커가 포함되면 클러스터에 포함시킨다 (default : 60)
		averageCenter (Boolean) : 마커들의 좌표 평균을 클러스터 좌표 설정 여부 (default : false)
		minLevel (Number) : 클러스터링 할 지도의 최소 레벨 값. 지정한 숫자에 해당하는 레벨 미만에서는 클러스터링 하지 않는다 (default : 0)
		minClusterSize (Number) : 클러스터링 할 최소 마커 수 (default: 2)
		styles (Array.< Object >) : 클러스터의 스타일. 여러개를 선언하면 calculator 로 구분된 사이즈 구간마다 서로 다른 스타일을 적용시킬 수 있다
		texts (Array.< String > | Function) : 클러스터에 표시할 문자열 또는 문자열 생성 함수. (default : 클러스터에 포함된 숫자)
		calculator (Array.< Number > | Function) : 클러스터 크기를 구분하는 값을 가진 배열 또는 구분값 생성함수 (default : [10, 100, 1000, 10000])
		disableClickZoom (Boolean) : 클러스터 클릭 시 지도 확대 여부. true로 설정하면 클러스터 클릭 시 확대 되지 않는다 (default: false)
		clickable (Boolean) : 클러스터 클릭 가능 여부 지정 옵션. false일 경우 클러스터의 clusterclick, clusterdblclick, clusterrightclick 이벤트가 발생하지 않으며, 커서가 변경되지 않는다. (default: true)
		hoverable (Boolean) : 클러스터에 마우스 over/out 가능 여부 지정 옵션. false일 경우 클러스터의 clusterover, clusterout 이벤트가 발생하지 않는다. (default: true)
	
	Methods:
		addMarker(marker[, nodraw])	-> 클러스터에 마커 '하나'를 추가한다.
		addMarkers(markers[, nodraw]) -> '여러개'의 마커를 추가한다.
		setTexts(texts) -> 클러스터 내부에 표시할 문자열 배열 또는 문자열 생성 함수를 설정한다.
		
	var clusterer = new kakao.maps.MarkerClusterer({
	    map: map,
	    markers: markers,
	    gridSize: 35,
	    averageCenter: true,
	    minLevel: 6,
	    disableClickZoom: true,
	    styles: [{
	        width : '53px', height : '52px',
	        background: 'url(cluster.png) no-repeat',
	        color: '#fff',
	        textAlign: 'center',
	        lineHeight: '54px'
	    }]
	});
		
	clusterer.addMarker(marker);
	//var markers = [ marker1, marker2, marker3, ... ];
	//clusterer.addMarker(markers);
*/ 
 
 
/* ==========  윈포윈도우(InfoWindow) 객체  ============== */ 
	// 마커를 클릭했을 때 마커 위에 표시할 인포윈도우를 생성합니다
// var iwContent = '<div style="padding:5px;">'+addr[0]+'</div>', // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다
//      iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다 
	// 인포윈도우로 장소에 대한 설명을 표시합니다
//  var infowindow = new kakao.maps.InfoWindow({
//      content: iwContent,
//     removable: iwRemoveable
// });
 	
</script>
</body>
</html>