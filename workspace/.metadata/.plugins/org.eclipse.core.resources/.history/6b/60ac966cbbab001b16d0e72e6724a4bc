package member;

//자바 SQL 패키지 import
import java.sql.*;
import java.util.*;

/**
 * 
 * DBBean 클래스는 member 테이블과 관련 있는 클래스이다
 *
 */
public class DBBean {
	private String mem_id;
	private String mem_passwd;
	private String mem_name;
	private String mem_nickname;
	private String mem_email;
	private String mem_num1;
	private String mem_num2;
	private String mem_phone;
	private String mem_gender;
	private int mem_Birthday1;
	private int mem_Birthday2;
	private int mem_Birthday3;
	private String mem_job;
	private String zipcode;
	private String useraddr1;
	private String useraddr2;
	private String useraddr3;
	
	// 오라클 연동에 관련된 참조변수 선언 
	Connection conn = null; 			// DB연결된 상태(세션)을 담은 객체
    PreparedStatement pstmt = null;  	// SQL문을 나타내는 객체
    ResultSet rs = null; 				// 쿼리문을 날린것에 대한 반환값을 담을 객체

	//오라클 JDBC 연동 설정 변수 선언
    String jdbc_driver = "oracle.jdbc.driver.OracleDriver";
    String jdbc_url = "jdbc:oracle:thin:@localhost:1521:xe";
    
    //DB 연동 메소드
    public void connect() {
    	try {
    		// JDBC 드라이버를 로딩하는 부분. 로딩 실패시 ClassNotFoundExceptiom 발생
    		Class.forName(jdbc_driver);  
    		// 입력된 오라클의 계정, 비밀번호, 주소를 바탕으로 오라클에 접속. 접속 실패시 SQLEXception 발생. getConnection() 메서드는 Connection을 반환한다.
    		conn = DriverManager.getConnection(jdbc_url, "testdb", "testdb1234");   
    	} catch(Exception e) {
    		System.out.println(e);
    	}
    }
    
    //DB 자원 해체 메서드
    public void disconnect() {
    	try {
    		pstmt.close();
    		conn.close();
    		rs.close();
    	} catch(Exception e) {
    		System.out.println(e);
    	}
    }
    
    // ID 중복 체크 매서드
    public int confirmId(String mem_id) {
    	connect();
    	int idDuplication = 0;	// id 중복 여부 체크 변수
    	try {
    		String Confirmed_SELECT = "select mem_id from member where mem_id=?";  // ? => preparedStatement로 구현
    		
    		pstmt = conn.prepareStatement(Confirmed_SELECT);
    		pstmt.setString(1, mem_id);	// ? 값을 지정
    		rs = pstmt.executeQuery();
    		
    		if(rs.next()) {
    			idDuplication = 1;	// ID가 중복인 경우
    		} else {
    			idDuplication = -1;	
    		}
    		
    	} catch(Exception e) {
    		System.out.println("confirmId():" + e);
    	} finally {
			disconnect();			//자원 해제 시킴
		}
    	return idDuplication;
    }
    
    // DB INSERT 메서드
    public boolean insertDB() {
    	connect();
    	
    	try {
    		String MEMBER_INSERT = "insert into member values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
    		
    		pstmt =  conn.prepareStatement(MEMBER_INSERT);
    		pstmt.setString(1, mem_id);
    		pstmt.setString(2, mem_passwd);
    		pstmt.setString(3, mem_name);
    		pstmt.setString(4, mem_nickname);
    		pstmt.setString(5, mem_email);
    		pstmt.setString(6, mem_num1);
    		pstmt.setString(7, mem_num2);
    		pstmt.setString(8, mem_phone);
    		pstmt.setString(9, mem_gender);
    		pstmt.setInt(10, mem_Birthday1);
    		pstmt.setInt(11, mem_Birthday2);
    		pstmt.setInt(12, mem_Birthday3);
    		pstmt.setString(13, mem_job);
    		pstmt.setString(14, zipCode);
    		pstmt.setString(15, userAddr1);
    		pstmt.setString(16, userAddr2);
    		pstmt.setString(17, userAddr3);
    		
    		//int result = pstmt.executeUpdate();
    		
    	} catch(Exception e) { 
    		System.out.println("insertDB() " + e);
    	}
    }
    
    
	// 멤버변수 하나당 getter/setter method 
	public String getMem_id() {
		return mem_id;
	}
	public void setMem_id(String mem_id) {
		this.mem_id = mem_id;
	}
	public String getMem_passwd() {
		return mem_passwd;
	}
	public void setMem_passwd(String mem_passwd) {
		this.mem_passwd = mem_passwd;
	}
	public String getMem_name() {
		return mem_name;
	}
	public void setMem_name(String mem_name) {
		this.mem_name = mem_name;
	}
	public String getMem_nickname() {
		return mem_nickname;
	}
	public void setMem_nickname(String mem_nickname) {
		this.mem_nickname = mem_nickname;
	}
	public String getMem_email() {
		return mem_email;
	}
	public void setMem_email(String mem_email) {
		this.mem_email = mem_email;
	}
	public String getMem_num1() {
		return mem_num1;
	}
	public void setMem_num1(String mem_num1) {
		this.mem_num1 = mem_num1;
	}
	public String getMem_num2() {
		return mem_num2;
	}
	public void setMem_num2(String mem_num2) {
		this.mem_num2 = mem_num2;
	}
	public String getMem_phone() {
		return mem_phone;
	}
	public void setMem_phone(String mem_phone) {
		this.mem_phone = mem_phone;
	}
	public String getMem_gender() {
		return mem_gender;
	}
	public void setMem_gender(String mem_gender) {
		this.mem_gender = mem_gender;
	}
	public int getMem_Birthday1() {
		return mem_Birthday1;
	}
	public void setMem_Birthday1(int mem_Birthday1) {
		this.mem_Birthday1 = mem_Birthday1;
	}
	public int getMem_Birthday2() {
		return mem_Birthday2;
	}
	public void setMem_Birthday2(int mem_Birthday2) {
		this.mem_Birthday2 = mem_Birthday2;
	}
	public int getMem_Birthday3() {
		return mem_Birthday3;
	}
	public void setMem_Birthday3(int mem_Birthday3) {
		this.mem_Birthday3 = mem_Birthday3;
	}
	public String getMem_job() {
		return mem_job;
	}
	public void setMem_job(String mem_job) {
		this.mem_job = mem_job;
	}
	public String getZipcode() {
		return zipcode;
	}
	public void setZipcode(String zipcode) {
		this.zipcode = zipcode;
	}
	public String getUseraddr1() {
		return useraddr1;
	}
	public void setUseraddr1(String useraddr1) {
		this.useraddr1 = useraddr1;
	}
	public String getUseraddr2() {
		return useraddr2;
	}
	public void setUseraddr2(String useraddr2) {
		this.useraddr2 = useraddr2;
	}
	public String getUseraddr3() {
		return useraddr3;
	}
	public void setUseraddr3(String useraddr3) {
		this.useraddr3 = useraddr3;
	}
	
}




